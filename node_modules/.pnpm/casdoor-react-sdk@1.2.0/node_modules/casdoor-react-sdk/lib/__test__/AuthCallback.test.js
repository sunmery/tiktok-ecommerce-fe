"use strict";
// Copyright 2022 The Casdoor Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const renderer = require("react-test-renderer");
const AuthCallback_1 = require("../AuthCallback");
const casdoor_js_sdk_1 = require("casdoor-js-sdk");
require("isomorphic-fetch");
const fakeSigninFn = () => {
    const body = new Blob([JSON.stringify({ status: "ok" })], {
        type: "application/json",
    });
    return Promise.resolve(new Response(body));
};
const spyWithFakeSigninFn = jest
    .spyOn(casdoor_js_sdk_1.default.prototype, "signin")
    .mockImplementation(fakeSigninFn);
it("<AuthCallback/> should render null", () => {
    const fakeSdk = new casdoor_js_sdk_1.default({
        serverUrl: "",
        clientId: "",
        appName: "",
        organizationName: "",
    });
    // ensure that the `signin` function is replaced
    fakeSdk.signin("");
    expect(spyWithFakeSigninFn).toHaveBeenCalled();
    const fakeSaveTokenFromResponseFn = jest.fn(() => { });
    const fakeIsGetTokenSuccessfulFn = jest.fn(() => true);
    const fakeServerUrl = "";
    const tree = renderer
        .create(React.createElement(AuthCallback_1.AuthCallback, { sdk: fakeSdk, saveTokenFromResponse: fakeSaveTokenFromResponseFn, isGetTokenSuccessful: fakeIsGetTokenSuccessfulFn, serverUrl: fakeServerUrl }))
        .toJSON();
    expect(tree).toMatchSnapshot();
});
